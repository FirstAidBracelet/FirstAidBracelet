<!DOCTYPE html>
<html lang="en">
<head>
    <title>Main Page</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="/stylesheets/mainPageStyles.css">
    <script src="/views/functions/cookie.js"></script>
</head>
<body>
    <% include ../partials/user_nav.ejs %>

    <script>
        var part = document.getElementById("nav-right");
        part.innerHTML += "<a class='navbar-brand' href='/mainPage'>Command Center</a>";
    </script>
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-11">
            <div class="container">
                <h4 id="chosenFiltersText" style="visibility:hidden">Click to remove chosen filter </h4>
                <ul id="filtersBarId" class="list-inline"></ul>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <center>
                <h4>Display By</h4>
                <div id="filtersMenu" class="vertical-menu"></div>
            </center>
        </div>
        <div class="col-md-9">
            <center>
                <h2> Soldiers Database </h2>
                <div id="mainSoldiersTable" style="overflow:scroll ; height:400px; "></div>
            </center>
            <center> <h3 id="chosenSoldiersText" style="visibility:hidden"> Chosen Soldiers  </h3></center>
            <div class="container">
                <center>  <ul id="filtersTable" class="list-inline"></ul> </center>
            </div>
            <div class="col-md-1"> </div>
    </div>
</body>
<script>
        /* This is the Socket between back and front end */
    var socket = io.connect('/'); // connect to server
  socket.on('news', function (data) { // listen to news event raised by the server
     buildSoldiersTable(JSON.parse(data));
  });

    /*local variables to manipulate chosen data in real time (not sure if we will need in future) */
    var chosenFilters = [];
    var chosenBracelets = [];
    var filteredSoldiers = [];

window.onload = function () {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {
        if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
            buildSoldiersTable(JSON.parse(this.response));
        }
    }
        xhr.open('POST','/get-soldiers/_/_/remove', true);
        xhr.send({});
    };

function buildAllFilters(){
    <% filters.forEach(function (filter) { %>
       filterButtonBuilder('<%= filter %>');
        <% }); %>
     buildLocationFilterButton();
  }

function addFilterEvent (myFilter, btn) {  // Auxilary functionf for updatePopovers - to add dynamicly events
        btn.addEventListener("click", function (event) {
                putFilter(myFilter, btn.innerHTML);
            event.preventDefault();
        });
   }
// function that creates the popover that related with the "popover" keyword
function updatePopovers(){
    $('[rel="popover"]').popover({
        container: 'body',
        html: true,
        content: function () {
             var myFilter = $($(this).data('popover-content')).children()[0].getAttribute("filter");
            var child = [];
            child = $($(this).data('popover-content')).children();
            var list = document.createElement('div');

             list.setAttribute("id", myFilter + "dropdown");
            for (var i = 0  ; i < child.length ; i++ ){
                 var btn = document.createElement('BUTTON');
                 btn.setAttribute("class", "list-group-item");
                 btn.setAttribute("type", "button");
                 btn.innerHTML = child[i].getAttribute("filterValue");
                 addFilterEvent(myFilter,btn);
                 list.appendChild(btn);

             };
         return list;
       }
    })
};

function filterButtonBuilder(filterName) {
     var existingFilters = [];
     var dropdown = document.createElement('div'); // The dropdown element

        dropdown.setAttribute("class", "dropdown-menu");
        dropdown.setAttribute("id", filterName + "dropdown");

        for (var i = 0; i < filteredSoldiers.length; i++){
              if(!filteredSoldiers[i][filterName] ) {
                        continue;
                     }
               var  existingFilter = false;
               for (var j = 0 ; j < existingFilters.length ; j++ ){
                     if(existingFilters[j] == filteredSoldiers[i][filterName] ) {
                        existingFilter = true;
                        break;
                     }

               }
               if (existingFilter == true){
                   continue;
               }
             existingFilters.push(filteredSoldiers[i][filterName]);

             var btn = document.createElement('div');
               btn.setAttribute("filter", filterName);
               btn.setAttribute("filterValue", filteredSoldiers[i][filterName]);
                dropdown.appendChild(btn);

          };

    if (document.getElementById( filterName + "dropdownButton") !== null) { // remove old if exists
            document.getElementById( filterName + "dropdownButton").remove();
     }

        var dropdownButton = document.createElement("button"); // The dropdown menu button
        dropdownButton.setAttribute("id", filterName + "dropdownButton");
        dropdownButton.innerHTML = filterName;
        dropdownButton.setAttribute("class", "btn btn-primary dropdown-toggle");
        dropdownButton.setAttribute("rel", "popover");
        dropdownButton.setAttribute("data-toggle", "popover");
        dropdownButton.setAttribute("data-popover-content", "#" + filterName + "dropdown");
        dropdownButton.setAttribute("type", "button");
        dropdownButton.setAttribute("data-trigger", "focus");
        dropdownButton.appendChild(dropdown);
        document.getElementById("filtersMenu").appendChild(dropdownButton);
        updatePopovers();
    }

 // Dynamic Table builder
 function buildSoldiersTable(sldrs) {

        if (document.getElementById("mainTable") !== null) {
            document.getElementById("mainTable").remove();
     }

     filteredSoldiers = [];
     filteredSoldiers = sldrs;
     var table = document.createElement('table');
	table.setAttribute("class", "table table-striped");
	table.setAttribute("id", "mainTable");
    var tHeader = table.insertRow(0);
    // Iterator for the header
	 var i = 0 ;
	  <% soldiers_table.forEach(function(doc) { %>
	 tHeader.setAttribute('style','font-weight: bold; text-align:center;');
     tHeader.insertCell(i).innerHTML = " <%= doc %> ";
	 i++;
     <% }); %>
          /* Here we will add 2 more columns for the table which are not part of
         the soldiers parameters this is the Evacuation request and Delete soldier option*/
          tHeader.insertCell(i++).innerHTML = "Evac_Request";
          tHeader.insertCell(i++).innerHTML = "Remove";

     // Iterator for the columns which are soldiers properties
	 var j = 1;
	 var k = 0;
	  sldrs.forEach(function(sold) {
          var tHeader = table.insertRow(j);
          tHeader.setAttribute("id",'tRow'+sold.Bracelet_ID);
	  j++;
         <% soldiers_table.forEach(function(tbl) { %>
		 tHeader.setAttribute('style','text-align:center;');
             var cell = tHeader.insertCell(k);
             cell.style.cursor = "pointer";
             cell.addEventListener("click", function (event) { // this is the handler that will open treatments table on some row click
              getTreatments(sold.Bracelet_ID);
               event.preventDefault();
          });
             cell.innerHTML = sold.<%=tbl%>;
		  k++;
          <% }); %>
                /* Here we will create The Evacuation button  */
          var btn = document.createElement("BUTTON");

          btn.addEventListener("click", function (event) {
              evacuationStatusChange(sold.Bracelet_ID);
               event.preventDefault();
          });
          var evacButtonText = document.createTextNode(sold.evacuation_request);
          if (sold.evacuation_request == "true") {
              btn.style.backgroundColor = "#b3ffcc";
          } else {
              btn.style.backgroundColor = "#e6e6e6";
          }
           btn.setAttribute("id",'evacButton'+sold.Bracelet_ID);
          btn.appendChild(evacButtonText);
         tHeader.setAttribute('style','text-align:center;');
         tHeader.insertCell(k).appendChild(btn);
          k++
           /* End of the evacuation button creation*/
   /* Here we will create The button to remove soldier from table */
     var btn = document.createElement("BUTTON");
          btn.addEventListener("click", function (event) {
              removeSoldier(sold.Bracelet_ID);
               event.preventDefault();
          });
     var t = document.createTextNode("X");
     btn.appendChild(t);
         tHeader.setAttribute('style','text-align:center;');
         tHeader.insertCell(k).appendChild(btn);
         k++;
            /* End of the delete button creation*/
		   k = 0 ;
		 });
        document.getElementById("mainSoldiersTable").appendChild(table);
     buildAllFilters();
 }

function changeCurrentEvacuationRequestAndReturnOld(braceletID) {
        var currStatus;
        for (var i = 0; i < filteredSoldiers.length; i++) {
            if (filteredSoldiers[i].Bracelet_ID == braceletID) {
                 currStatus = filteredSoldiers[i].evacuation_request;
                if (currStatus == "false") {
                    filteredSoldiers[i].evacuation_request = "true";
                } else {
                    filteredSoldiers[i].evacuation_request = "false";
                }
                return currStatus;
            }
        }
         return currStatus;
    }


    function evacuationStatusChange(braceletID) { // Changing the status of evacuation request on click
        var cnfrmation = confirm("Are you sure you want to change patient evacuation status?");
        var newStatus;
        var currStatus;
        if (cnfrmation == true) {
          currStatus =  changeCurrentEvacuationRequestAndReturnOld(braceletID);
            if (currStatus == "false") {
                newStatus = "true";
                 document.getElementById("evacButton" + braceletID).style.backgroundColor = "#b3ffcc";
            } else {
                document.getElementById("evacButton" + braceletID).style.backgroundColor = "#e6e6e6";
            newStatus = "false";
            }

       document.getElementById("evacButton" + braceletID).innerHTML = newStatus;
       socket.emit('updateEvacuationStatus', { braceletId: braceletID , status: newStatus });
     }
   }
    function removeSoldier(braceletID) { // function to remove soldier from table
        var cnfrmation = confirm("Are you sure you want to remove this patient from Database?");
        if (cnfrmation == true) {
            document.getElementById('tRow' + braceletID).remove();
             socket.emit('removePatient', { braceletId: braceletID });

        }
    }

    function getTreatments(braceletID) {
        for (i = 0; i < chosenBracelets.length; i++) {
		if (braceletID === chosenBracelets[i] ){
			return;
             }
        }
      chosenBracelets.push(braceletID);
     var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {//Call a function when the state changes.
        if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
            buildTreatmentsTable(JSON.parse(this.response));
        }
    }
        xhr.open('POST','/get-soldier/'+ braceletID , true);
        xhr.send({});
}

 function buildTreatmentsTable(givenSoldier) {

       givenSoldier.forEach(function(soldier) {  // this is the found soldier
 // Here we create Dynamicly linear list
   var node = document.createElement("LI");
    node.setAttribute('style', 'overflow:scroll; height:225px; width:350px');
    node.setAttribute("id", "eqipId"+soldier.Bracelet_ID);
   // Here we will insert our table
    var table = document.createElement('table');
    table.setAttribute("class", "table table-striped");
    var tHeaderr = table.insertRow(0);
    tHeaderr.setAttribute('style', 'font-weight: bold; text-align:center;');
    var tCell = tHeaderr.insertCell(0);
           /* Here we will create refresh button */
           var btnn = document.createElement("BUTTON");
           btnn.addEventListener("click", function (event) {
    for (i = 0; i < chosenBracelets.length; i++) { // removing the bracelet from array that prevents duplicates
                  if (soldier.Bracelet_ID === chosenBracelets[i]) {
                      chosenBracelets.splice(i, 1);
    document.getElementById('eqipId' + soldier.Bracelet_ID).remove();
      getTreatments(soldier.Bracelet_ID); //rebuild table after delted the first one - the refresh operation
                      break;
                  }
              }
              event.preventDefault();
     });
     var t = document.createTextNode("refresh");
     btnn.appendChild(t);
            tCell.appendChild(btnn);
           /* End of the refresh button creation*/
            tCell = tHeaderr.insertCell(1);
            tCell.colSpan = "2";
            /* Here we will create The button to delete the Treatments Table */
     var btn = document.createElement("BUTTON");
     btn.addEventListener("click", function (event) {
         document.getElementById('eqipId' + soldier.Bracelet_ID).remove();
              event.preventDefault();
           for (i = 0; i < chosenBracelets.length; i++) { // removing the bracelet from array that prevents duplicates
                  if (soldier.Bracelet_ID === chosenBracelets[i]) {
                      chosenBracelets.splice(i, 1);
                      if (chosenBracelets.length == 0) {
                          document.getElementById("chosenSoldiersText").style.visibility = "hidden";
                      }
                    break;
                  }
              }
     });
     var t = document.createTextNode("close");
     btn.appendChild(t);
            tCell.appendChild(btn);
            /* End of the delete button creation*/
    tHeaderr = table.insertRow(1);
    var tCell = tHeaderr.insertCell(0);
    tHeaderr.setAttribute('style', 'font-weight: bold; text-align:center;');
    tCell.innerHTML = "BraceletID: " + soldier.Bracelet_ID + "    ";
    tCell.colSpan = "3";

    tHeaderr = table.insertRow(2);
    tHeaderr.setAttribute('style', 'font-weight: bold; text-align:center;');
    tCell = tHeaderr.insertCell(0);
    tCell.innerHTML = "Soldier #: " + soldier.Personal_Number;
    tCell.colSpan = "3";
    var tHeader = table.insertRow(3);
    // Iterator for the header
	 var i = 0 ;
	  <% treatments_table.forEach(function(doc) { %>
	 tHeader.setAttribute('style','font-weight: bold; text-align:center;');
          tHeader.insertCell(i).innerHTML = " <%= doc %> ";
	 i++;
	  <% }); %>
    // Iterator for the columns which are treatment properties
	var k = 0;
    for(var i = 0; i < soldier.treatments.length; i++) { // for every treatment
      var tHeader = table.insertRow(i+4);  // create new row and insert +4 because there are 4 headers before
         <% treatments_table.forEach(function(tbl) { %> // every row put create cells
             tHeader.setAttribute('style', 'text-align:center;');
             tHeader.insertCell(k).innerHTML = soldier.treatments[i].<%=tbl%>;
		  k++;
		   <% }); %>
		   k = 0 ;
            };
        node.appendChild(table);
        document.getElementById("filtersTable").appendChild(node);
        document.getElementById("chosenSoldiersText").style.visibility = "visible";
             });
    }
    function putFilter(type, value) {

         for (i = 0; i < chosenFilters.length; i++) {
		if (value === chosenFilters[i] ){
			return;
             }
        }
      chosenFilters.push(value);
      var node = document.createElement("BUTTON");
        node.setAttribute("id", type + value);
        node.addEventListener("click", function (event) {
             removeFilter(type,value);
               event.preventDefault();
            });

     var textnode = document.createTextNode(value);
    node.appendChild(textnode);
    node.style.backgroundColor = "yellow";
        document.getElementById("filtersBarId").appendChild(node);
        document.getElementById("chosenFiltersText").style.visibility = "visible";

   var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {//Call a function when the state changes.
        if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
            buildSoldiersTable(JSON.parse(this.response));

        }
    }
        xhr.open('POST','/get-soldiers/'+ type +'/' + value + '/add', true);
        xhr.send({});
}

function removeFilter(type, value) {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {//Call a function when the state changes.
        if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
            buildSoldiersTable(JSON.parse(this.response));

            for (i = 0; i < chosenFilters.length; i++) {
		if (value === chosenFilters[i] ){
            chosenFilters.splice(i, 1);
            document.getElementById(type + value).remove();
               if (chosenFilters.length == 0) {
                   document.getElementById("chosenFiltersText").style.visibility = "hidden";
                 }
            break;
             }
        }
      }
    }
        xhr.open('POST','/get-soldiers/'+ type +'/' + value + '/remove', true);
        xhr.send({});
 }

    var North = { "maxLat": "33.3", "minLat": "32.46", "maxLong": "35.9", "minLong": "34.8" };
    var Center = { "maxLat": "32.46", "minLat": "31.67",  "maxLong": "35.57", "minLong": "34.55" };
    var South = { "maxLat": "31.67", "minLat": "29.49", "maxLong": "35.57", "minLong": "34.21" };

function isNorth(sld) {
       return (sld.Latitude <= North.maxLat && sld.Latitude >= North.minLat && sld.Longitude <= North.maxLong && sld.Longitude >= North.minLong);
  }
function isCenter(sld) {
        return (sld.Latitude <= Center.maxLat && sld.Latitude >= Center.minLat && sld.Longitude <= Center.maxLong && sld.Longitude >= Center.minLong);
 }

function isSouth(sld) {
        return (sld.Latitude <= South.maxLat && sld.Latitude >= South.minLat && sld.Longitude <= South.maxLong && sld.Longitude >= South.minLong);
  }

function soldierLocation(sld) {
        if (isNorth(sld)) {
            return "North";
        }
        if (isCenter(sld)) {
            return "Center";
        }
        if (isSouth(sld)) {
            return "South";
        }
        return "undefined";
    }

function buildLocationFilterButton() {
      var existingFilters = [];
      var dropdown = document.createElement('div'); // The dropdown element
        dropdown.setAttribute("class", "dropdown-menu");
        dropdown.setAttribute("id", "Location" + "dropdown");

        for (var i = 0; i < filteredSoldiers.length; i++){
            var lat = filteredSoldiers[i]["Latitude"];
            var long =  filteredSoldiers[i]["Longitude"];

              if(!lat || !long ) {
                        continue;
            }
              var sLocation = soldierLocation(filteredSoldiers[i]);
              socket.emit('updateLocationFilter', { braceletId: filteredSoldiers[i]["Bracelet_ID"] , location: sLocation });
               var  existingFilter = false;
               for (var j = 0 ; j < existingFilters.length ; j++ ){
                     if(existingFilters[j] == sLocation ) {
                        existingFilter = true;
                        break;
                     }

               }
               if (existingFilter == true){
                   continue;
               }
             existingFilters.push(sLocation);

             var btn = document.createElement('div');
               btn.setAttribute("filter", "Location");
               btn.setAttribute("filterValue", sLocation);
                dropdown.appendChild(btn);

          };

    if (document.getElementById( "Location" + "dropdownButton") !== null) { // remove old if exists
            document.getElementById( "Location" + "dropdownButton").remove();
     }

        var dropdownButton = document.createElement("button"); // The dropdown menu button
       dropdownButton.setAttribute("id", "Location" + "dropdownButton");
        dropdownButton.innerHTML = "Location";
        dropdownButton.setAttribute("class", "btn btn-primary dropdown-toggle");
        dropdownButton.setAttribute("rel", "popover");
        dropdownButton.setAttribute("data-toggle", "popover");
        dropdownButton.setAttribute("data-popover-content", "#" + "Location" + "dropdown");
        dropdownButton.setAttribute("type", "button");
        dropdownButton.setAttribute("data-trigger", "focus");
        dropdownButton.appendChild(dropdown);
        document.getElementById("filtersMenu").appendChild(dropdownButton);
        updatePopovers();
}
</script>
</html>