<!DOCTYPE html>
<html lang="en">
<head>
    <title>Main Page</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="/stylesheets/mainPageStyles.css">
</head>
<body>
    <div class="row">
        <nav class="navbar navbar-default">
            <div class="container-fluid">
                <div class="navbar-header">
                    <a class="navbar-brand" href="/">First Aid Bracelet</a>
                    <a class="navbar-brand" href="/admin_main">User</a>
                </div>
            </div>
        </nav>
    </div>
    <div class="row">" "  </div>
    <div class="row">" "  </div>
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-11">
            <h4>Chosen Filters </h4>
            <div class="container">
                <h4>Press to remove </h4>
                <ul id="filtersBarId" class="list-inline"></ul>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">
            <center>
                <div class="vertical-menu pull-right">
                    <h4>Display By</h4>
                    <!-- This is the Filters side Bar container, in future he will be built dynamicly -->
                    <!-- Every element in the container is a dropdown menu of filter values -->
                    <div class="dropdown">
                        <div id="divisionDropdown" class="dropdown-menu">
                            <!-- Every dropdown is created by template iterator which builds list from the value we pass fom back-end -->
                            <% divisions.forEach(function(dvsn) { %>
                            <a href="#" class="list-group-item" onclick="putFilter('Division','<%= dvsn %>')"><%= dvsn %></a>
                            <% }); %>
                        </div>
                    </div>
                    <button class="btn btn-primary dropdown-toggle" rel="popover" data-toggle="dropdown" data-popover-content="#divisionDropdown" type="button" data-trigger="focus">Division <span class="caret-right"></span></button>
                    <h1></h1>
                    <div class="dropdown">
                        <div id="unitDropdown" class="dropdown-menu">
                            <% units.forEach(function(unt) { %>
                            <a href="#" class="list-group-item" onclick="putFilter('Unit','<%= unt %>')"><%= unt %></a>
                            <% }); %>
                        </div>
                    </div>
                    <button class="btn btn-primary dropdown-toggle" rel="popover" data-toggle="dropdown" data-popover-content="#unitDropdown" type="button" data-trigger="focus">Unit <span class="caret-right"></span></button>
                    <h1></h1>
                    <div class="dropdown">
                        <div id="locationDropdown" class="dropdown-menu">
                            <!-- still dont know how to lsear wth location this is for future -->
                            <!-- <div id="locationD" href="#" class="list-group-item"></div>-->

                        </div>
                    </div>
                    <button class="btn btn-primary dropdown-toggle" rel="popover" data-toggle="dropdown" data-popover-content="#locationDropdown" type="button" data-trigger="focus">Location <span class="caret-right"></span></button>
                    <h1></h1>
                    <div class="dropdown">
                        <div id="statusDropdown" class="dropdown-menu">
                            <a href="#" class="list-group-item" onclick="putFilter('injury_stat','light')">Light</a>
                            <a href="#" class="list-group-item" onclick="putFilter('injury_stat','average')" style="background-color:#ff7733">Average</a>
                            <a href="#" class="list-group-item" onclick="putFilter('injury_stat','heavy')" style="background-color:#ff0066">Heavy</a>
                            <a href="#" class="list-group-item" onclick="putFilter('injury_stat','kia')" style="background-color:red">K.I.A</a>
                        </div>
                    </div>
                    <button class="btn btn-primary dropdown-toggle" rel="popover" data-toggle="dropdown" data-popover-content="#statusDropdown" type="button" data-trigger="focus">Status <span class="caret-right"></span></button>
                    <h1></h1>
                    <!--<a href="/mainPage" onclick="deleteTable()">Clear all</a>-->
                    <!-- <a href="#" onclick="updateLocationFilters()">Clear all</a>-->
                </div>
            </center>
        </div>
        <div class="col-md-10">
            <center>
                <div class="container">
                    <center>
                        <h2> Soldiers Database </h2>
                    </center>
                    <center>  <div id="mainSoldiersTable" style="overflow:scroll ; height:400px; "></div> </center>
                </div>
            </center>
            <center> <h3> Chosen Soldiers  </h3></center>
            <div class="container">
                <center>  <ul id="filtersTable" class="list-inline"></ul> </center>
            </div>
        </div>
    </div>
</body>
<script>
        /* This is the Socket between back and front end */
    var socket = io.connect('/'); // connect to server
  socket.on('news', function (data) { // listen to news event raised by the server
     buildSoldiersTable(JSON.parse(data));
  });
    /*local variables to manipulate chosen data in real time (not sure if we will need in future) */
    var chosenFilters = [];
    var chosenBracelets = [];
    var filteredSoldiers = [];

    window.onload = function () {
        var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {
        if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
            buildSoldiersTable(JSON.parse(this.response));
        }
    }
        xhr.open('POST','/get-soldiers/_/_/remove', true);
        xhr.send({});
    };

// function that creates the popover that related with the "popover" keyword
$(function(){
  $('[rel="popover"]').popover({
  container: 'body',
   html: true,
  content: function () {
  var clone = $($(this).data('popover-content')).clone(true).removeClass('dropdown-menu');
    return clone;
        }
    }).click(function(e) {
        e.preventDefault();
    });
});

function statusColor(status) {
    switch (status) {
        case "kia":
            return  "red";
        case "heavy":
             return "#ff0066";
        case "average":
            return "#ff7733";
        case "light":
           return "whilte";
    }
}

 // Dynamic Table builder
 function buildSoldiersTable(sldrs) {

        if (document.getElementById("mainTable") !== null) {
            document.getElementById("mainTable").remove();
     }
        filteredSoldiers = [];
        filteredSoldiers = sldrs;

     var table = document.createElement('table');
	table.setAttribute("class", "table table-striped");
	table.setAttribute("id", "mainTable");
    var tHeader = table.insertRow(0);
    // Iterator for the header
	 var i = 0 ;
	  <% soldiers_table.forEach(function(doc) { %>
	 tHeader.setAttribute('style','font-weight: bold; text-align:center;');
     tHeader.insertCell(i).innerHTML = " <%= doc %> ";
	 i++;
     <% }); %>
          /* Here we will add 2 more columns for the table which are not part of
         the soldiers parameters this is the Evacuation request and Delete soldier option*/
          tHeader.insertCell(i++).innerHTML = "Evac_Request";
          tHeader.insertCell(i++).innerHTML = "Remove";

     // Iterator for the columns which are soldiers properties
	 var j = 1;
	 var k = 0;
	  sldrs.forEach(function(sold) {
          var tHeader = table.insertRow(j);
          tHeader.setAttribute("id",'tRow'+sold.Bracelet_ID);
	  j++;
         <% soldiers_table.forEach(function(tbl) { %>
		 tHeader.setAttribute('style','text-align:center;');
             var cell = tHeader.insertCell(k);
             cell.style.cursor = "pointer";
             cell.addEventListener("click", function (event) { // this is the handler that will open treatments table on some row click
              getTreatments(sold.Bracelet_ID);
               event.preventDefault();
          });
             cell.innerHTML = sold.<%=tbl%>;
		  k++;
          <% }); %>
                /* Here we will create The Evacuation button  */
          var btn = document.createElement("BUTTON");

          btn.addEventListener("click", function (event) {
              evacuationStatusChange(sold.Bracelet_ID);
               event.preventDefault();
          });
          var evacButtonText = document.createTextNode(sold.evacuation_request);
          if (sold.evacuation_request == "true") {
              btn.style.backgroundColor = "#b3ffcc";
          } else {
              btn.style.backgroundColor = "#e6e6e6";
          }
           btn.setAttribute("id",'evacButton'+sold.Bracelet_ID);
          btn.appendChild(evacButtonText);
         tHeader.setAttribute('style','text-align:center;');
         tHeader.insertCell(k).appendChild(btn);
          k++
           /* End of the evacuation button creation*/
   /* Here we will create The button to remove soldier from table */
     var btn = document.createElement("BUTTON");
          btn.addEventListener("click", function (event) {
              removeSoldier(sold.Bracelet_ID);
               event.preventDefault();
          });
     var t = document.createTextNode("X");
     btn.appendChild(t);
         tHeader.setAttribute('style','text-align:center;');
         tHeader.insertCell(k).appendChild(btn);
         k++;
            /* End of the delete button creation*/
		   k = 0 ;
		 });
        document.getElementById("mainSoldiersTable").appendChild(table);
    }

    function changeCurrentEvacuationRequestAndReturnOld(braceletID) {
        var currStatus;
        for (var i = 0; i < filteredSoldiers.length; i++) {
            if (filteredSoldiers[i].Bracelet_ID == braceletID) {
                 currStatus = filteredSoldiers[i].evacuation_request;
                if (currStatus == "false") {
                    filteredSoldiers[i].evacuation_request = "true";
                } else {
                    filteredSoldiers[i].evacuation_request = "false";
                }
                return currStatus;
            }
        }
         return currStatus;
    }


    function evacuationStatusChange(braceletID) { // Changing the status of evacuation request on click
        var cnfrmation = confirm("Are you sure you want to change pation evacuation status?");
        var newStatus;
        var currStatus;
        if (cnfrmation == true) {
          currStatus =  changeCurrentEvacuationRequestAndReturnOld(braceletID);
            if (currStatus == "false") {
                newStatus = "true";
                 document.getElementById("evacButton" + braceletID).style.backgroundColor = "#b3ffcc";
            } else {
                document.getElementById("evacButton" + braceletID).style.backgroundColor = "#e6e6e6";
            newStatus = "false";
            }

       document.getElementById("evacButton" + braceletID).innerHTML = newStatus;
       socket.emit('updateEvacuationStatus', { braceletId: braceletID , status: newStatus });
     }
   }
    function removeSoldier(braceletID) { // function to remove soldier from table
        var cnfrmation = confirm("Are you sure you want to remove this patient from Database?");
        if (cnfrmation == true) {
            document.getElementById('tRow' + braceletID).remove();
             socket.emit('removePatient', { braceletId: braceletID });

        }
    }

    function getTreatments(braceletID) {
        for (i = 0; i < chosenBracelets.length; i++) {
		if (braceletID === chosenBracelets[i] ){
			return;
             }
        }
      chosenBracelets.push(braceletID);
     var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {//Call a function when the state changes.
        if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
            buildTreatmentsTable(JSON.parse(this.response));
        }
    }
        xhr.open('POST','/get-soldier/'+ braceletID , true);
        xhr.send({});
}

 function buildTreatmentsTable(givenSoldier) {

       givenSoldier.forEach(function(soldier) {  // this is the found soldier
 // Here we create Dynamicly linear list
   var node = document.createElement("LI");
    node.setAttribute('style', 'overflow:scroll; height:225px; width:350px');
    node.setAttribute("id", "eqipId"+soldier.Bracelet_ID);
   // Here we will insert our table
    var table = document.createElement('table');
    table.setAttribute("class", "table table-striped");
    var tHeaderr = table.insertRow(0);
    tHeaderr.setAttribute('style', 'font-weight: bold; text-align:center;');
    var tCell = tHeaderr.insertCell(0);
           /* Here we will create refresh button */
           var btnn = document.createElement("BUTTON");
           btnn.addEventListener("click", function (event) {
    for (i = 0; i < chosenBracelets.length; i++) { // removing the bracelet from array that prevents duplicates
                  if (soldier.Bracelet_ID === chosenBracelets[i]) {
                      chosenBracelets.splice(i, 1);
    document.getElementById('eqipId' + soldier.Bracelet_ID).remove();
      getTreatments(soldier.Bracelet_ID); //rebuild table after delted the first one - the refresh operation
                      break;
                  }
              }
              event.preventDefault();
     });
     var t = document.createTextNode("refresh");
     btnn.appendChild(t);
            tCell.appendChild(btnn);
           /* End of the refresh button creation*/
            tCell = tHeaderr.insertCell(1);
            tCell.colSpan = "2";
            /* Here we will create The button to delete the Treatments Table */
     var btn = document.createElement("BUTTON");
     btn.addEventListener("click", function (event) {
         document.getElementById('eqipId' + soldier.Bracelet_ID).remove();
              event.preventDefault();
           for (i = 0; i < chosenBracelets.length; i++) { // removing the bracelet from array that prevents duplicates
                  if (soldier.Bracelet_ID === chosenBracelets[i]) {
                      chosenBracelets.splice(i, 1);
                      break;
                  }
              }
     });
     var t = document.createTextNode("close");
     btn.appendChild(t);
            tCell.appendChild(btn);
            /* End of the delete button creation*/

    tHeaderr = table.insertRow(1);
    var tCell = tHeaderr.insertCell(0);
    tHeaderr.setAttribute('style', 'font-weight: bold; text-align:center;');
    tCell.innerHTML = "BraceletID: " + soldier.Bracelet_ID + "    ";
    tCell.setAttribute('style','background:' + statusColor(soldier.injury_stat)+';');
    tCell.colSpan = "3";

    tHeaderr = table.insertRow(2);
    tHeaderr.setAttribute('style', 'font-weight: bold; text-align:center;');
    tCell = tHeaderr.insertCell(0);
    tCell.innerHTML = "Soldier #: " + soldier.personal_number;
    tCell.colSpan = "3";
    var tHeader = table.insertRow(3);
     <!-- Iterator for the header -->
	 var i = 0 ;
	  <% treatments_table.forEach(function(doc) { %>
	 tHeader.setAttribute('style','font-weight: bold; text-align:center;');
          tHeader.insertCell(i).innerHTML = " <%= doc %> ";
	 i++;
	  <% }); %>
    // Iterator for the columns which are treatment properties
		 var k = 0;
    for(var i = 0; i < soldier.treatments.length; i++) { // for every treatment
      var tHeader = table.insertRow(i+4);  // create new row and insert +4 because there are 4 headers before
         <% treatments_table.forEach(function(tbl) { %> // every row put create cells
             tHeader.setAttribute('style', 'text-align:center;');
             tHeader.insertCell(k).innerHTML = soldier.treatments[i].<%=tbl%>;
		  k++;
		   <% }); %>
		   k = 0 ;
            };
    node.appendChild(table);
        document.getElementById("filtersTable").appendChild(node);
             });
    }
function putFilter(type, value) {
         for (i = 0; i < chosenFilters.length; i++) {
		if (value === chosenFilters[i] ){
			return;
             }
        }
      chosenFilters.push(value);
      var node = document.createElement("BUTTON");
        node.setAttribute("id", type + value);
        node.addEventListener("click", function (event) {
             removeFilter(type,value);
               event.preventDefault();
            });
              var t = document.createTextNode(status);
      node.appendChild(t);
         var textnode = document.createTextNode(value);
    node.appendChild(textnode);
    node.style.backgroundColor = "yellow";
       document.getElementById("filtersBarId").appendChild(node);

   var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {//Call a function when the state changes.
        if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
            buildSoldiersTable(JSON.parse(this.response));
        }
    }
        xhr.open('POST','/get-soldiers/'+ type +'/' + value + '/add', true);
        xhr.send({});
}

function removeFilter(type, value) {
    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function () {//Call a function when the state changes.
        if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
            buildSoldiersTable(JSON.parse(this.response));
            for (i = 0; i < chosenFilters.length; i++) {
		if (value === chosenFilters[i] ){
            chosenFilters.splice(i, 1);
             document.getElementById(type + value).remove();
                        break;
             }
        }
        }
    }
        xhr.open('POST','/get-soldiers/'+ type +'/' + value + '/remove', true);
        xhr.send({});
    }

    function updateLocationFilters() {
         var list = document.createElement("DIV");
        filteredSoldiers.forEach(function (sld) {
            var btnn = document.createElement("BUTTON");
            var t = document.createTextNode(sld.latitude +','+ sld.longitude);
            btnn.appendChild(t);
            list.appendChild(btnn);
        });
        document.getElementById("locationDropdown").appendChild(list);
}
</script>
</html>

